'''
Reescreva a fun√ß√£o leiaInt() que fizemos no desafio 104, incluindo agora a possibilidade da digita√ß√£o de um n√∫mero de tipo inv√°lido. Aproveite e crie tamb√©m uma fun√ß√£o leiaFloat() com a mesma funcionalidade.
'''
def leiaInt():
    while True:
        try:
            n = int(input('Digite um n√∫mero inteiro: '))
        except (ValueError, TypeError):
            print('\033[31mERRO: por favor, digite um n√∫mero inteiro v√°lido\033[m')
        except (KeyboardInterrupt):
            print('\033[31mERRO: usu√°rio interrompeu a execu√ß√£o do programa\033[m')
        else:
            return n,
        finally:
            print('Acabamos! üëª') #SEMPRE EXECUTA
def leiaFloat():
    while True:
        try: #TENTAR FAZER OPERA√á√ÉO
            n = float(input('Digite um n√∫mero real: '))
        except (ValueError, TypeError): #ERRO DE VALOR OU TIPO
            print('\033[31mERRO: por favor, digite um n√∫mero real v√°lido\033[m')
        except (KeyboardInterrupt): #USU√ÅRIO INTERROMPE O PROGRAMA
            print('\033[31mERRO: usu√°rio interrompeu a execu√ß√£o do programa\033[m')
        else: #SE N√ÉO TIVER ERRO: 
            return n
        finally:
            print('Acabamos! üëª') #SEMPRE EXECUTA

n = leiaInt()
print(f'Voc√™ digitou o n√∫mero {n}')
n = leiaFloat()
print(f'Voc√™ digitou o n√∫mero {n}')
                    